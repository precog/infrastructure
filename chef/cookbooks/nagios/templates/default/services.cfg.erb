# Nagios Service Definitions.
#
# Automatically generated by Chef.

define service {
    use                 default-service
    host_name           ^.*$
    service_description ping
    check_command       check_ping!200.0,20%!500.0,60%
}

# monitoring service checks
define service {
    service_description Nagios
    hostgroup_name      <%= node['nagios']['server_role'] %>
    check_command       check-nagios
    contact_groups      admins
    use                 default-service
}

# Uncomment if you're using Munin
#define service {
#    service_description Munin Client
#    hostgroup_name      all
#    check_command       check_tcp!4949
#    use                 default-service
#}

# default checks for all hosts
# Uncomment if you're running chef-client as a daemon
#define service {
#    service_description Chef Client
#    hostgroup_name     base
#    check_command      check_chef_client
#    use                default-service
#}

#define service {
#    service_description Free Space All Disks
#    hostgroup_name      all
#    check_command       check_all_disks
#    use                 default-service
#}
#
#define service {
#    service_description Load Average
#    hostgroup_name      all
#    check_command       check_load
#    use                 default-service
#}
#
#define service {
#    service_description Free Memory
#    hostgroup_name      all
#    check_command       check_mem
#    use                 default-service
#}

define service {
    service_description SSH
    hostgroup_name      all
    check_command       check_ssh
    use                 default-service
}

#define service {
#    service_description Processes
#    hostgroup_name      all
#    check_command       check_local_procs
#    use                 default-service
#}

<% unless @service_hosts['monitoring'].nil? -%>
# If the monitoring host is a postfix relay, uncomment this.
#define service {
#    service_description Postfix
#    hostgroup_name      monitoring
#    check_command       check_nrpe!check_smtp
#    use                 default-service
#}

# If the monitoring host is a syslog server, uncomment this.
#define service {
#    service_description Rsyslog
#    hostgroup_name      monitoring
#    check_command       check_tcp!514
#    use                 default-service
#}

<% end -%>
<% unless @service_hosts['webserver'].nil? -%>
# basic web server http check
define service {
    service_description HTTP Processes
    hostgroup_name      webserver
    check_command       check_http
    use                 default-service
}

<% end -%>
#<% unless @service_hosts['appserver'].nil? -%>
## basic check if appserver role is running unicorn
#define service {
#    service_description Unicorn Processes
#    hostgroup_name      appserver
#    check_command       check_nrpe!check_unicorn
#    use                 default-service
#}
#
#define service {
#    service_description Unicorn HTTP
#    hostgroup_name      appserver
#    check_command       check_http_port_expect!8080!"HTTP/1.1 302 Found"
#    use                 default-service
#}
#
#<% end -%>
#<% unless @service_hosts['database_master'].nil? -%>
## basic check if the database_master role is a mysql server
## database_master service checks
#define service {
#    service_description MySQL
#    hostgroup_name      database_master
#    check_command       check_nrpe!check_mysql_server
#    use                 default-service
#}
#
#<% end -%>

# Appserver checks
define service {
    use			default-service
    hostgroup_name	appserverV2
    service_description AppServer Connectivity
    check_command	check_http
}

define service {
    use			default-service
    hostgroup_name	appserverV2
    service_description Analytics v0 token enum
    check_command	check_http_content!api.reportgrid.com!30010!/tokens/?tokenId=A3BC1539-E8A9-4207-BB41-3036EC2C6E6D![
}

define service {
    use			default-service
    hostgroup_name	appserverV2
    service_description Analytics v1 token enum
    check_command	check_http_content!api.reportgrid.com!30020!/tokens?tokenId=A3BC1539-E8A9-4207-BB41-3036EC2C6E6D![
}

define service {
    use                 default-service
    hostgroup_name      appserverV2
    service_description Analytics v1 error counts
    check_command	check_rg_service!/blueeyes/services/analytics/v1/health!errors!10!20
}

define service {
    use                 default-service
    hostgroup_name      appserverV2
    service_description Analytics v1 response times
    check_command	check_rg_service!/blueeyes/services/analytics/v1/health!response!100!250
}

define service {
    use                 default-service
    hostgroup_name      appserverV2
    service_description Billing v1 error counts
    check_command	check_rg_service!/blueeyes/services/billing/v1/health!errors!10!20
}

define service {
    use                 default-service
    hostgroup_name      appserverV2
    service_description Billing v1 response times
    check_command	check_rg_service!/blueeyes/services/billing/v1/health!response!100!250
}

# devops checks
define service {
    use                 default-service
    hostgroup_name	monitoring
    service_description	Deployer service endpoint
    check_command	check_http_content!devops1.reportgrid.com!29999!/blueeyes/services/deployer/v1/health!service
}

# Mongo checks
define service {
    use                 default-service
    hostgroup_name          mongodb-replset-server
    service_description     Mongo Repl Connect Check
    check_command           check_mongodb!connect!27018!5!10
}
    
define service {
    use                 default-service
    hostgroup_name          mongodb-replset-server
    service_description     Mongo Repl Status
    check_command           check_mongodb!replset_state!27018!0!0
}

define service {
    use                 default-service
    hostgroup_name          mongodb-replset-server
    service_description     Mongo Repl Free Connections
    check_command           check_mongodb!connections!27018!70!80
}

define service {
    use                 default-service
    hostgroup_name          mongodb-replset-server
    service_description     Mongo Replication Lag
    check_command           check_mongodb!replication_lag!27018!300!900
}

define service {
    use                 default-service
    hostgroup_name          mongodb-replset-server
    service_description     Mongo Lock Percentage
#    check_command           check_mongodb!lock!27018!5!10
    check_command           check_mongodb!lock!27018!10!20
}

define service {
    use                 default-service
    hostgroup_name          mongodb-replset-server
    service_description     Mongo Flush Average
#    check_command           check_mongodb!flushing!27018!500!1000
    check_command           check_mongodb!flushing!27018!1000!2000
}

define service {
      use                     default-service
      hostgroup_name          mongodb-replset-server
      service_description     MongoDB Index Miss Ratio
#      check_command           check_mongodb!index_miss_ratio!27018!.005!.01
      check_command           check_mongodb!index_miss_ratio!27018!.03!.06
}