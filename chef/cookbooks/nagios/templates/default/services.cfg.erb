# Nagios Service Definitions.
#
# Automatically generated by Chef.

define service {
    use                 default-service
    host_name           ^.*$
    service_description ping
    check_command       check_ping!200.0,20%!500.0,60%
}

# monitoring service checks
define service {
    service_description Nagios
    hostgroup_name      <%= node['nagios']['server_role'] %>
    check_command       check-nagios
    contact_groups      admins
    use                 default-service
}

# Uncomment if you're using Munin
#define service {
#    service_description Munin Client
#    hostgroup_name      all
#    check_command       check_tcp!4949
#    use                 default-service
#}

# default checks for all hosts
# Uncomment if you're running chef-client as a daemon
#define service {
#    service_description Chef Client
#    hostgroup_name     base
#    check_command      check_chef_client
#    use                default-service
#}

#define service {
#    service_description Free Space All Disks
#    hostgroup_name      all
#    check_command       check_all_disks
#    use                 default-service
#}
#
#define service {
#    service_description Load Average
#    hostgroup_name      all
#    check_command       check_load
#    use                 default-service
#}
#
#define service {
#    service_description Free Memory
#    hostgroup_name      all
#    check_command       check_mem
#    use                 default-service
#}

define service {
    service_description SSH
    hostgroup_name      all
    check_command       check_ssh
    use                 default-service
}

#define service {
#    service_description Processes
#    hostgroup_name      all
#    check_command       check_local_procs
#    use                 default-service
#}

<% unless @service_hosts['monitoring'].nil? -%>
# If the monitoring host is a postfix relay, uncomment this.
#define service {
#    service_description Postfix
#    hostgroup_name      monitoring
#    check_command       check_nrpe!check_smtp
#    use                 default-service
#}

# If the monitoring host is a syslog server, uncomment this.
#define service {
#    service_description Rsyslog
#    hostgroup_name      monitoring
#    check_command       check_tcp!514
#    use                 default-service
#}

<% end -%>
<% unless @service_hosts['webserver'].nil? -%>
# basic web server http check
define service {
    service_description HTTP Processes
    hostgroup_name      webserver
    check_command       check_http
    use                 default-service
}

<% end -%>
#<% unless @service_hosts['appserver'].nil? -%>
## basic check if appserver role is running unicorn
#define service {
#    service_description Unicorn Processes
#    hostgroup_name      appserver
#    check_command       check_nrpe!check_unicorn
#    use                 default-service
#}
#
#define service {
#    service_description Unicorn HTTP
#    hostgroup_name      appserver
#    check_command       check_http_port_expect!8080!"HTTP/1.1 302 Found"
#    use                 default-service
#}
#
#<% end -%>
#<% unless @service_hosts['database_master'].nil? -%>
## basic check if the database_master role is a mysql server
## database_master service checks
#define service {
#    service_description MySQL
#    hostgroup_name      database_master
#    check_command       check_nrpe!check_mysql_server
#    use                 default-service
#}
#
#<% end -%>

# Appserver checks
define service {
    use			default-service
    hostgroup_name	appserverV2
    service_description AppServer Connectivity
    check_command	check_http
}

# No longer used!
#define service {
#    use			default-service
#    hostgroup_name	appserverV2
#    service_description Analytics v0 token enum
#    check_command	check_http_content!api.reportgrid.com!30010!/tokens/?tokenId=A3BC1539-E8A9-4207-BB41-3036EC2C6E6D![
#}

define service {
    use			default-service
    hostgroup_name	appserverV2
    service_description Analytics v1 token enum
    check_command	check_http_content!api.reportgrid.com!30020!/tokens?tokenId=A3BC1539-E8A9-4207-BB41-3036EC2C6E6D![
}

define service {
    use                 default-service
    hostgroup_name      appserverV2
    service_description Analytics v1 error counts
    check_command	check_rg_service!/blueeyes/services/analytics/v1/health!errors!10!20
}

define service {
    use                 default-service
    hostgroup_name      appserverV2
    service_description Analytics v1 response times
    check_command	check_rg_service!/blueeyes/services/analytics/v1/health!response!30000!50000
}

define service {
    use                 default-service
    hostgroup_name      appserverV2
    service_description Billing v1 error counts
    check_command	check_rg_service!/blueeyes/services/billing/v1/health!errors!10!20
}

define service {
    use                 default-service
    hostgroup_name      appserverV2
    service_description Billing v1 response times
    check_command	check_rg_service!/blueeyes/services/billing/v1/health!response!500!1000
}

# devci checks
define service {
    use                 default-service
    hostgroup_name	nexus
    service_description	Nexus endpoint
    check_command	check_http_content!nexus.reportgrid.com!80!/index.html!Sonatype
}

define service {
    use                 default-service
    hostgroup_name	nexus
    service_description	Jenkins endpoint
    check_command	check_http_content_expect!devci01.reportgrid.com!8080!/securityRealm/commenceLogin!302
}

# devops checks
define service {
    use                 default-service
    hostgroup_name	monitoring
    service_description	Deployer service endpoint
    check_command	check_http_content!devops1.reportgrid.com!29999!/blueeyes/services/deployer/v1/health!service
}

# Mongo checks
define service {
    use                 default-service
    hostgroup_name          mongodb-replset-server
    service_description     Mongo Repl Connect Check
    check_command           check_mongodb!connect!27018!5!10
}
    
define service {
    use                 default-service
    hostgroup_name          mongodb-replset-server
    service_description     Mongo Repl Status
    check_command           check_mongodb!replset_state!27018!0!0
}

define service {
    use                 default-service
    hostgroup_name          mongodb-replset-server
    service_description     Mongo Repl Free Connections
    check_command           check_mongodb!connections!27018!70!80
}

define service {
    use                 default-service
    hostgroup_name          mongodb-replset-server
    service_description     Mongo Replication Lag
    check_command           check_mongodb!replication_lag!27018!300!900
}

define service {
    use                 default-service
    hostgroup_name          mongodb-replset-server
    service_description     Mongo Lock Percentage
    check_command           check_mongodb!lock!27018!10!20
}

define service {
    use                 default-service
    hostgroup_name          mongodb-replset-server
    service_description     Mongo Flush Average
    check_command           check_mongodb!flushing!27018!1000!2000
}

define service {
      use                     default-service
      hostgroup_name          mongodb-replset-server
      service_description     MongoDB Index Miss Ratio
      check_command           check_mongodb!index_miss_ratio!27018!.03!.06
}

# Quirrel checks
<% shard_config = [["shard-demo1", 30150, "5CDA81E8-9817-438A-A340-F34E578E86F8", "", 1], 
                   ["shard-demo2", 30152, "5CDA81E8-9817-438A-A340-F34E578E86F8", "", 1],
                   ["shard-demo3", 30154, "5CDA81E8-9817-438A-A340-F34E578E86F8", "", 1],
                   ["shard-demo4", 30156, "5CDA81E8-9817-438A-A340-F34E578E86F8", "", 1],
                   ["shard-beta", 30070, "88893651-23BA-4A3E-A8CD-FCADBE1F0A18", "example/", 1]] # [name, port, token, path prefix, enable] %>

<% shard_config.each { |name,port,token,prefix,enabled| %>

# <%= name %> checks
define service {
       use                    default-service
       hostgroup_name         quirrel-shard
       process_perf_data      1
       active_checks_enabled  <%= enabled %>
       service_description    Quirrel <%= name %> simple math query
       action_url             /nagiosgraph/cgi-bin/show.cgi?host=$HOSTNAME$&service=$SERVICEDESC$
       check_command          check_quirrel!<%= port %>!<%= token %>!"<%= name %> simple math"!"total := 2 + 1%3Btotal * 3"!1000!2000
}

define service {
       use                    default-service
       hostgroup_name         quirrel-shard
       process_perf_data      1
       active_checks_enabled  <%= enabled %>
       service_description    Quirrel <%= name %> mean value query
       action_url             /nagiosgraph/cgi-bin/show.cgi?host=$HOSTNAME$&service=$SERVICEDESC$
       check_command          check_quirrel!<%= port %>!<%= token %>!"<%= name %> mean value"!"mean(//<%= prefix %>clicks.product.price)"!5000!10000 
}

define service {
       use                    default-service
       hostgroup_name         quirrel-shard
       normal_check_interval  300
       process_perf_data      1
       active_checks_enabled  <%= enabled %>
       service_description    Quirrel <%= name %> complex query
       action_url             /nagiosgraph/cgi-bin/show.cgi?host=$HOSTNAME$&service=$SERVICEDESC$
       check_command          check_quirrel!<%= port %>!<%= token %>!"<%= name %> complex"!"solve %27price, %27gender clicks := //clicks tally := count(clicks where clicks.customer.gender = %27gender & clicks.product.price = %27price) { price : %27price, gender: %27gender, tally: tally }"!40000!60000
}

<% } %>

# Nebula checks
define service {
       use                    default-service
       hostgroup_name         quirrel-shardV2
       process_perf_data      1
       active_checks_enabled  1
       service_description    Quirrel simple math query
       action_url             /nagiosgraph/cgi-bin/show.cgi?host=$HOSTNAME$&service=$SERVICEDESC$
       check_command          check_quirrel!30070!AB150219-F045-4A32-A015-1C378FB1792B!"Simple math"!"total := 2 + 1%3Btotal * 3"!1000!2000
}

define service {
       use                    default-service
       hostgroup_name         quirrel-shardV2
       process_perf_data      1
       active_checks_enabled  1
       service_description    Quirrel mean value query
       action_url             /nagiosgraph/cgi-bin/show.cgi?host=$HOSTNAME$&service=$SERVICEDESC$
       check_command          check_quirrel!30070!AB150219-F045-4A32-A015-1C378FB1792B!"Mean value"!"mean(load(%22/0000000067/clicks%22).product.price)"!5000!10000 
}

define service {
       use                    default-service
       hostgroup_name         quirrel-shardV2
       normal_check_interval  300
       process_perf_data      1
       active_checks_enabled  1
       service_description    Quirrel complex query
       action_url             /nagiosgraph/cgi-bin/show.cgi?host=$HOSTNAME$&service=$SERVICEDESC$
       check_command          check_quirrel!30070!AB150219-F045-4A32-A015-1C378FB1792B!"Complex query"!"solve %27price, %27gender clicks := //0000000067/clicks tally := count(clicks where clicks.customer.gender = %27gender & clicks.product.price = %27price) { price : %27price, gender: %27gender, tally: tally }"!40000!60000
}

define service {
       use                    default-service
       hostgroup_name         quirrel-shardV2
       normal_check_interval  300
       process_perf_data      1
       active_checks_enabled  1
       service_description    SnapEngage query
       action_url             /nagiosgraph/cgi-bin/show.cgi?host=$HOSTNAME$&service=$SERVICEDESC$
       check_command          check_quirrel!30070!C0F57A14-2931-4BEF-8ABF-B6E239A2FD59!"SnapEngage query"!"import std::stats::* import std::time::* agents := //0000000056/se12014/timzon-snapabug-widget/status upperBound := 1358261667962 lowerBound := 1357023600000 extraLB := lowerBound - (24*60*60000) results := solve 'agent agents' := agents where agents.timestamp <= upperBound & agents.timestamp >= extraLB & agents.agentId = 'agent order := denseRank(agents'.timestamp) agents'' := agents' with { rank: order } newagents := new agents'' newagents' := newagents with { rank: newagents.rank - 1 } result := newagents' ~ agents'' { first: agents'', second: newagents' } where newagents'.rank = agents''.rank {start: std::math::max(result.first.timestamp, lowerBound), end: result.second.timestamp, agentId: result.first.agentId, status: result.first.status, name: result.first.agentAlias, data: result.first} results where results.end > lowerBound"!10000!15000
}

define service {
       use                    default-service
       hostgroup_name         quirrel-shardV2
       normal_check_interval  300
       process_perf_data      1
       active_checks_enabled  1
       service_description    SnapEngage NihDB query
       action_url             /nagiosgraph/cgi-bin/show.cgi?host=$HOSTNAME$&service=$SERVICEDESC$
       check_command          check_quirrel!50070!C0F57A14-2931-4BEF-8ABF-B6E239A2FD59!"SnapEngage NihDB query"!"import std::stats::* import std::time::* agents := //0000000056/se12014/timzon-snapabug-widget/status upperBound := 1358261667962 lowerBound := 1357023600000 extraLB := lowerBound - (24*60*60000) results := solve 'agent agents' := agents where agents.timestamp <= upperBound & agents.timestamp >= extraLB & agents.agentId = 'agent order := denseRank(agents'.timestamp) agents'' := agents' with { rank: order } newagents := new agents'' newagents' := newagents with { rank: newagents.rank - 1 } result := newagents' ~ agents'' { first: agents'', second: newagents' } where newagents'.rank = agents''.rank {start: std::math::max(result.first.timestamp, lowerBound), end: result.second.timestamp, agentId: result.first.agentId, status: result.first.status, name: result.first.agentAlias, data: result.first} results where results.end > lowerBound"!10000!15000
}

# Quirrel shard additional services
define service {
       use                 default-service
       hostgroup_name      quirrel-shard
       service_description qwebirc
       check_command       check_https_content!api.precog.com!9090!/!Quirrel
}

define service {
    use                 default-service
    hostgroup_name      quirrel-shard
    service_description Beta ingest health
    check_command	check_http_content!api.precog.com!30060!/blueeyes/services/ingest/v1/health!uptimeSeconds
}

define service {
    use                 default-service
    hostgroup_name      quirrel-shardV2
    service_description Nebula ingest health
    check_command	check_http_content!nebula.precog.com!30060!/blueeyes/services/ingest/v1/health!uptimeSeconds
}

define service {
    use                 default-service
    hostgroup_name      quirrel-shard
    service_description Security health
    check_command	check_http_content!api.precog.com!30062!/blueeyes/services/security/v1/health!uptimeSeconds
}

define service {
    use                 default-service
    hostgroup_name      quirrel-shard
    service_description Accounts health
    check_command	check_http_content!api.precog.com!30064!/blueeyes/services/accounts/v1/health!uptimeSeconds
}

define service {
    use                 default-service
    hostgroup_name      quirrel-shard
    service_description Zookeeper
    check_command	check_tcp!2181
}

define service {
    use                 default-service
    hostgroup_name      quirrel-shard
    service_description Kafka Local
    check_command	check_tcp!9082
}

define service {
    use                 default-service
    hostgroup_name      quirrel-shard
    service_description Kafka Global
    check_command	check_tcp!9092
}

# API content checks
define service {
    use                 default-service
    hostgroup_name      reportgrid_api
    service_description Precog JS
    check_command       check_http_content!api.reportgrid.com!80!/js/precog.js!Precog
}

define service {
    use                 default-service
    hostgroup_name      reportgrid_api
    service_description Reportgrid Core JS
    check_command       check_http_content!api.reportgrid.com!80!/js/reportgrid-core.js!ReportGrid
}

define service {
    use                 default-service
    hostgroup_name      reportgrid_api
    service_description Reportgrid Core CSS
    check_command       check_http_content!api.reportgrid.com!80!/css/rg.css!rg-colors-default
}

define service {
    use                 default-service
    hostgroup_name      reportgrid_api
    service_description Reportgrid Query JS
    check_command       check_http_content!api.reportgrid.com!80!/js/reportgrid-query.js!function
}

define service {
    use                 default-service
    hostgroup_name      reportgrid_api
    service_description Reportgrid Viz JS
    check_command       check_http_content!api.reportgrid.com!80!/js/reportgrid-viz.js!function
}

define service {
    use                 default-service
    hostgroup_name      reportgrid_api
    service_description Reportgrid Charts JS
    check_command       check_http_content!api.reportgrid.com!80!/js/reportgrid-charts.js!function
}

define service {
    use                 default-service
    hostgroup_name      reportgrid_api
    service_description Reportgrid Charts CSS
    check_command       check_http_content!api.reportgrid.com!80!/css/rg-charts.css!rg-colors-charts
}

define service {
    use                 default-service
    hostgroup_name      reportgrid_api
    service_description Reportgrid Viz Samples
    check_command       check_http_content!api.reportgrid.com!80!/services/viz/samples/index.php!overlapping
}

# Monitor the web servers
define service {
    use                 default-service
    hostgroup_name      precogwebsite
    service_description Precog Website
    check_command       check_http_content!www.precog.com!80!/!ReportGrid
}

define service {
    use                 default-service
    hostgroup_name      precogwebsite
    service_description Precog Website Events
    check_command       check_http_content!www.precog.com!80!/about/events!Event
}
