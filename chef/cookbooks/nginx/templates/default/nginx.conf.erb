user www-data;
worker_processes 2;

error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
    # multi_accept on;
}

http {
  include       /etc/nginx/mime.types;

  log_format upstreamlog '[$time_local] [$remote_addr/$remote_user/$server_name] to: [$upstream_addr] status: $status tx: $bytes_sent req_time: $request_time request: [$request] up_resptime: $upstream_response_time body: [$request_body]';

  access_log	/var/log/nginx/access.log upstreamlog;

  sendfile        on;
  #tcp_nopush     on;

  #keepalive_timeout  0;
  keepalive_timeout  65;
  tcp_nodelay        on;

  gzip  on;
  gzip_disable "MSIE [1-6]\.(?!.*SV1)";

  <% @services.each do |service, params| %>
  upstream <%= "#{service[0]}_#{service[1]}" %> {
    <% params[:servers].each do |server|
         if !server.nil? && server == @node[:fqdn] then %>
    server <%= "#{server}:#{params[:port]}" %>;
    <%     else %>
    server <%= "#{server}:#{params[:port]}" %> backup;
    <%   end %>
    <% end %>
  }

  <% end %>

  proxy_cache_path /var/nginx/cache levels=1:2 keys_zone=STATIC:50m;

  server {
    listen 80;
    server_name "api.reportgrid.com";

    # Health check should succeed
    location /haproxy/health {
      return 200 Healthy;
    }

    # If the custom header exists here and it's not from localhost, it's invalid
    if ($remote_addr !~ 127.*) {
      set $blockfakessl T;
    }

    if ($http_reportgriddecrypter) {
      set $blockfakessl "T$blockfakessl";
    }

    if ($blockfakessl = "TT") {
      return 403;
    }            
    
    # We completely block access to the billing admin interface via proxy
    location ^~ /services/billing/v1/accounts/assess {
      return 403;
    }

    location ^~ /services/viz {
      rewrite ^/services//[[:alnum:]-]+/(.*) $1 break;
      proxy_pass http://localhost:20000;
    }

   <% @services.each do |service, params| %>
    location ~* <%= "^/(blueeyes/|)services/#{service[0]}/#{service[1]}/" %> {
      # Rewrite incoming request to use the service's URI scheme
      rewrite ^/services/[[:alnum:]-]+/[[:alnum:]-]+/(.*) $1 break;
      proxy_set_header X-Service-URL-Root /services/<%= "#{service[0]}/#{service[1]}" %>;
      add_header Access-Control-Allow-Origin *;

      proxy_cache off;
      proxy_pass http://<%= "#{service[0]}_#{service[1]}" %>;
    }

   <% end %>  
    # Anything else gets proxied/cached
    
    location / {
      proxy_cache STATIC;
      proxy_cache_valid 5m;
      proxy_ignore_headers Cache-Control;
      proxy_pass http://api.reportgrid.com.s3-website-us-east-1.amazonaws.com:80;
    }
 }
}
